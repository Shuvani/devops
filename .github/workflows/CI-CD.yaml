name: Test moscow time project

on: [push, pull_request]

jobs:

  test:
    name: Test application
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.10
    - name: Cache Primes
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app_python/requirements.txt
    - name: Lint with flake8
      run: |
        flake8 app_python/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app_python/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest app_python/test.py

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-20.04
    needs: [test]
    if: github.ref == 'refs/heads/main'

    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v2
      - name: Set variables
        run: |
          VER=$(sed -n 's/version=//p' app_python/setup.py | sed 's/"//' | sed 's/",//g' | sed 's/ //g')
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: app_python/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/moscow_time:${{ env.VERSION }}